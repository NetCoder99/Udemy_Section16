//--------------------------------------
// ../src/index.js
//--------------------------------------
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
ReactDOM.render(<App />, document.getElementById('root'));

//--------------------------------------
// ../src/index.js
//--------------------------------------
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;700&display=swap');

* {
  box-sizing: border-box;
}

html {
  font-family: 'Noto Sans JP', sans-serif;
}

body {
  margin: 0;
  background-color: #3f3f3f;
}

.app {
  width: 90%;
  max-width: 43rem;
  padding: 1rem;
  border-radius: 12px;
  background-color: white;
  margin: 3rem auto;
}

.form-control {
  margin-bottom: .5rem;
}

.control-group {
  display: flex;
  column-gap: 1rem;
  flex-wrap: wrap;
}

.control-group .form-control {
  min-width: 15rem;
  flex: 1;
}

button {
  font: inherit;
  background-color: #240370;
  color: white;
  border: 1px solid #240370;
  padding: 0.5rem 1.5rem;
  border-radius: 4px;
  cursor: pointer;
}

button:hover,
button:active {
  background-color: #33059e;
  border-color: #33059e;
}

.form-actions {
  text-align: right;
}

.form-actions button {
  margin-left: 1rem;
}

.invalid input {
  border: 1px solid #b40e0e;
  background-color: #fddddd;
}

.invalid input:focus {
  border-color: #ff8800;
  background-color: #fbe8d2;
}

.success-text {
  color: green;
  font-weight: bold;
}

.error-text {
  color: #b40e0e;
  font-weight: bold;
}

.display-inline {
  display: inline-block !important;
}

.width3rem {
  width: 3rem !important;
}

.width4rem {
  width: 4rem !important;
}

.width5rem {
  width: 5rem !important;
}
.width6rem {
  width: 6rem !important;
}
.width7rem {
  width: 7rem !important;
}
.width8rem {
  width: 8rem !important;
}
.width9rem {
  width: 9rem !important;
}
.width10rem {
  width: 10rem !important;
}


//--------------------------------------
// ../src/App.js
//--------------------------------------
import SimpleInput from './components/SimpleInput';
function App() {
  return (
    <div className="app">
      <SimpleInput />
    </div>
  );
}
export default App;

//--------------------------------------
// ../src/components/common/AppButton.css
//--------------------------------------
.AppButton {
  cursor: pointer;
  font: inherit;
  background-color: #7a0144;
  border: 1px solid #7a0144;
  border-radius: 20px;
  padding: 0.2rem 1rem;
  color: white;
}

.AppButton:hover,
.AppButton:active {
  background-color: #9c095a;
  border-color: #9c095a;
}
.AppButton:disabled {
  cursor: auto;
  background-color: lightgrey;
  border-color: lightslategray;
}

.AppButton2 {
  cursor: pointer;
  font: inherit;
  background-color: #4360e0;
  border: 1px solid #4360e0;
  border-radius: 20px;
  padding: 0.2rem 1rem;
  color: white;
}

.AppButton2:hover,
.AppButton2:active {
  background-color: #5a73e2;
  border-color: #5a73e2;
}
.AppButton2:disabled {
  cursor: auto;
  background-color: lightgrey;
  border-color: lightslategray;
}

//--------------------------------------
// ../src/components/common/AppButton.tsx
//--------------------------------------
import "./AppButton.css";
interface Props {
  onClick?: React.MouseEventHandler<HTMLButtonElement>;
  text: string;
  className: string;
  id?: string;
  disabled?: boolean;
}

const AppButton: React.FC<Props> = (props: Props) => {
  const tmpId = props.id ? props.id : "AppButton";
  const isDisabled = props.disabled ? props.disabled : false;
  const tmpOnClick = props.onClick  ? props.onClick : () => {};
  return (
    <button
      id={tmpId}
      onClick={tmpOnClick}
      className={`${props.className}`}
      disabled={isDisabled}
    >
      {props.text}
    </button>
  );
};
export default AppButton;


//--------------------------------------
// ../src/components/common/AppInput.css
//--------------------------------------
.AppInput {
  margin-bottom: .5rem;
}

.AppInput input {
  display: block;
  font: inherit;
  padding: 0.2rem;
  border-radius: 5px;
  border: 1px solid #ccc;
  width: 20rem;
  max-width: 100%;
}

.AppInput label {
  font-weight: bold;
  margin-bottom: 0.5rem;
}

.AppInput input:focus {
  outline: none;
  border-color: #240370;
  background-color: #e0d4fd;
}

.invalid {
  border: 1px solid #b40e0e;
  background-color: #fddddd;
}

.invalid input:focus {
  border-color: #ff8800;
  background-color: #fbe8d2;
}


//--------------------------------------
// ../src/components/common/AppInput.css
//--------------------------------------
import React from "react";
import "./AppInput.css";

interface Props {
  onChangeHandler?: React.ChangeEventHandler<HTMLInputElement>;
  onBlurHandler?: React.FocusEventHandler<HTMLInputElement>;
  inputType?: string;
  labelText: string;
  inputId:  string;
  disabled?: boolean;
  labelClass?: string;
  inputClass?: string;
  ref?: React.Ref<HTMLInputElement> | null;
}

const AppInput = React.forwardRef<HTMLInputElement, Props>((props, ref) => {
  const tmpInputType    = props.inputType  ? props.inputType  : "text";
  const tmpLabelClass   = props.labelClass ? props.labelClass : "AppInput";
  const tmpInputClass   = props.inputClass ? props.inputClass : "AppInput";
  const tmpOnBlur       = props.onBlurHandler  ? props.onBlurHandler : () => {};

  return (
    <div className="AppInput">
      <label htmlFor="name" className={tmpLabelClass}>{props.labelText}</label>
      <input
        type={tmpInputType}
        id={props.inputId}
        className={tmpInputClass}
        onChange={props.onChangeHandler}
        onBlur={tmpOnBlur}
        ref={ref}
      />
    </div>
  );
});

export default AppInput;



